/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers'
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers'
import type { NonPayableOverrides } from './common'
import type { Token, TokenInterface } from './Token'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'totalSupply',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: '_decimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162000f8a38038062000f8a833981016040819052620000349162000210565b83838333838360036200004883826200032b565b5060046200005782826200032b565b5050506200006c81836200008060201b60201c565b5050505060ff16608052506200041f915050565b6001600160a01b038216620000db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000ef9190620003f7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017357600080fd5b81516001600160401b03808211156200019057620001906200014b565b604051601f8301601f19908116603f01168101908282118183101715620001bb57620001bb6200014b565b81604052838152602092508683858801011115620001d857600080fd5b600091505b83821015620001fc5785820183015181830184015290820190620001dd565b600093810190920192909252949350505050565b600080600080608085870312156200022757600080fd5b84516001600160401b03808211156200023f57600080fd5b6200024d8883890162000161565b955060208701519150808211156200026457600080fd5b50620002738782880162000161565b93505060408501519150606085015160ff811681146200029257600080fd5b939692955090935050565b600181811c90821680620002b257607f821691505b602082108103620002d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014657600081815260208120601f850160051c81016020861015620003025750805b601f850160051c820191505b8181101562000323578281556001016200030e565b505050505050565b81516001600160401b038111156200034757620003476200014b565b6200035f816200035884546200029d565b84620002d9565b602080601f8311600181146200039757600084156200037e5750858301515b600019600386901b1c1916600185901b17855562000323565b600085815260208120601f198616915b82811015620003c857888601518255948401946001909101908401620003a7565b5085821015620003e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200041957634e487b7160e01b600052601160045260246000fd5b92915050565b608051610b4f6200043b60003960006101510152610b4f6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101df578063a457c2d7146101e7578063a9059cbb146101fa578063dd62ed3e1461020d57600080fd5b806342966c681461018e57806370a08231146101a357806379cc6790146101cc57600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610246565b6040516100f99190610980565b60405180910390f35b6101156101103660046109ea565b6102d8565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610a14565b6102f2565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b6101156101893660046109ea565b610316565b6101a161019c366004610a50565b610355565b005b6101296101b1366004610a69565b6001600160a01b031660009081526020819052604090205490565b6101a16101da3660046109ea565b610362565b6100ec61037b565b6101156101f53660046109ea565b61038a565b6101156102083660046109ea565b610439565b61012961021b366004610a8b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461025590610abe565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610abe565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050905090565b6000336102e6818585610447565b60019150505b92915050565b6000336103008582856105a0565b61030b858585610632565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102e69082908690610350908790610af8565b610447565b61035f338261081f565b50565b61036d8233836105a0565b610377828261081f565b5050565b60606004805461025590610abe565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561042c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61030b8286868403610447565b6000336102e6818585610632565b6001600160a01b0383166104c25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b03821661053e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461062c578181101561061f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610423565b61062c8484848403610447565b50505050565b6001600160a01b0383166106ae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b03821661072a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b038316600090815260208190526040902054818110156107b95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062c565b6001600160a01b03821661089b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b0382166000908152602081905260409020548181101561092a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610593565b600060208083528351808285015260005b818110156109ad57858101830151858201604001528201610991565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e557600080fd5b919050565b600080604083850312156109fd57600080fd5b610a06836109ce565b946020939093013593505050565b600080600060608486031215610a2957600080fd5b610a32846109ce565b9250610a40602085016109ce565b9150604084013590509250925092565b600060208284031215610a6257600080fd5b5035919050565b600060208284031215610a7b57600080fd5b610a84826109ce565b9392505050565b60008060408385031215610a9e57600080fd5b610aa7836109ce565b9150610ab5602084016109ce565b90509250929050565b600181811c90821680610ad257607f821691505b602082108103610af257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ec57634e487b7160e01b600052601160045260246000fdfea26469706673582212203e88b7b8eb8f156e3662d77b880864477ec2d4f493ef6fdde93cc64066c5e8f064736f6c63430008110033'

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: TokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      _decimals,
      overrides || {},
    )
  }
  override deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    _decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(name, symbol, totalSupply, _decimals, overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token
  }
}
